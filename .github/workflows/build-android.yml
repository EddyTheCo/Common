name: push-build-release
on:
  workflow_call:
    inputs:
      qtVersion:
        default: '6.6.0'
        type: string
      qtArch:
        default: 'android_arm64_v8a'
        type: string
      qtModules:
        default: ''
        type: string
      qtTarget:
        default: ''
        type: string
    secrets:
      QT_ANDROID_KEYSTORE_PATH:
        required: true
      QT_ANDROID_KEYSTORE_STORE_PASS:
        required: true
      QT_ANDROID_KEYSTORE_ALIAS:
        required: true
env:
  QT_ANDROID_KEYSTORE_PATH: ${{ secrets.QT_ANDROID_KEYSTORE_PATH }}      
  QT_ANDROID_KEYSTORE_STORE_PASS: ${{ secrets.QT_ANDROID_KEYSTORE_STORE_PASS }}      
  QT_ANDROID_KEYSTORE_ALIAS: ${{ secrets.QT_ANDROID_KEYSTORE_ALIAS }}      

jobs:
  build_android:
    runs-on: 'ubuntu-latest'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies on ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake

      - name: Configure JDK
        uses: actions/setup-java@v3
        id: setup-jdk
        with:
          distribution: 'oracle' 
          java-version: '20'

      - name: Configure SDK
        uses: android-actions/setup-android@v2
        id: setup-sdk  

      - name: Configure NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25c
          add-to-path: false
          link-to-sdk: true

      - name: Install Qt 
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: ${{ inputs.qtVersion }}
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          modules: ${{ inputs.qtModules }} 

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: ${{ inputs.qtVersion }}
          host: 'linux'
          target: 'android'
          arch: ${{ inputs.qtArch }}
          modules: ${{ inputs.qtModules }}

      - name: Create build directory
        run: cmake -E make_directory ${{runner.temp}}/build

      - name: Configure
        working-directory: ${{ runner.temp }}/build
        run: |
          echo $QT_ANDROID_KEYSTORE_ALIAS
          chmod +x ${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/${{ inputs.qtArch }}/bin/qt-cmake
          ${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/${{ inputs.qtArch }}/bin/qt-cmake -G Ninja  -DQTDEPLOY=OFF -DANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }} -DANDROID_SDK_ROOT=$ANDROID_SDK_ROOT -DNODE_JWT=${{ secrets.NODE_JWT }}  -DQT_HOST_PATH=${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/gcc_64/ -DCMAKE_BUILD_TYPE="release"  -DCMAKE_INSTALL_PREFIX="../install" ${{ github.workspace }}

      - name: Build
        working-directory: ${{ runner.temp }}/build
        run: |
          cmake --build .

      - name: Build apk
        run: |
          ${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/gcc_64/bin/androiddeployqt --input ${{ runner.temp }}/build/android-${{ inputs.qtTarget }}-deployment-settings.json --output ${{ runner.temp }}/build/android-build/ --android-platform android-34 --jdk ${{ steps.setup-jdk.outputs.path }} --gradle --release --sign



      - uses: actions/upload-pages-artifact@v1.0.8
        with:
          path: ${{ runner.temp }}/build/android-build/build/outputs/apk/release/

