name: push-build-release
on: 
  workflow_call:
    inputs:
      qtVersion:
        default: '6.5.0'
        type: string  
      qtModules:
        default: ''
        type: string
      deploy_page:
        default: true
        type: boolean 
    secrets:
      NODE_JWT:
        required: false

jobs:
  build_wasm:
    runs-on: 'ubuntu-latest'
        
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
          

      - name: Install dependencies on ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake

      - uses: mymindstorm/setup-emsdk@v11
        with:
          version: 3.1.25
          actions-cache-folder: 'emsdk-cache'

      - name: Install Qt 
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: ${{ inputs.qtVersion }}
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          modules: ${{ inputs.qtModules }} 

      - name: Install Qt wasm
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: ${{ inputs.qtVersion }}
          host: 'linux'
          target: 'desktop'
          arch: 'wasm_singlethread'
          modules: ${{ inputs.qtModules }} 

      - name: Create build directory
        run: cmake -E make_directory ${{runner.temp}}/build

      - name: Configure
        working-directory: ${{ runner.temp }}/build
        run: |
          chmod +x ${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/wasm_singlethread/bin/qt-cmake 
          ${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/wasm_singlethread/bin/qt-cmake -G Ninja -DQTDEPLOY=OFF -DNODE_JWT=${{ secrets.NODE_JWT }}  -DQT_HOST_PATH=${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/gcc_64/ -DCMAKE_BUILD_TYPE="release"  -DCMAKE_INSTALL_PREFIX="../install" ${{ github.workspace }}
      
      - name: Build
        working-directory: ${{ runner.temp }}/build
        run: cmake --build .   
      
      - uses: actions/upload-pages-artifact@v1.0.8
        with:
          path: ${{ github.workspace }}/wasm/ 


  deploy_wasm:
    needs: build_wasm
    if: inputs.deploy_page 
    runs-on: 'ubuntu-latest'
    permissions:
      pages: write      
      id-token: write 

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 
