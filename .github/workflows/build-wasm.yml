name: push-build-release
on: 
  workflow_call:
    inputs:
      qtVersion:
        default: '6.5.0'
        type: string  
      cmakeArgs:
        default: ''
        type: string
      qtModules:
        default: ''
        type: string
      deploy_dev:
        default: false
        type: boolean
      emsdkVersion:
        default: '3.1.25'
        type: string  

jobs:
  build_wasm:
    runs-on: 'ubuntu-latest'
        
    steps:
      - uses: actions/checkout@v4
        if: startsWith(inputs.deploy_dev,'false')
        with:
          fetch-depth: 0
      
      - uses: actions/checkout@v4
        if: startsWith(inputs.deploy_dev,'true')
        with:
          fetch-depth: 0
          ref: 'main'

      - name: Install dependencies on ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake

      - uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{ inputs.emsdkVersion }}
          actions-cache-folder: 'emsdk-cache'

      - name: Install Qt 
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: ${{ inputs.qtVersion }}
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          modules: ${{ inputs.qtModules }} 

      - name: Install Qt wasm
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: ${{ inputs.qtVersion }}
          host: 'linux'
          target: 'desktop'
          arch: 'wasm_singlethread'
          modules: ${{ inputs.qtModules }} 

      - name: Create build directory
        run: cmake -E make_directory ${{runner.temp}}/build

      - name: Configure
        working-directory: ${{ runner.temp }}/build
        run: |
          chmod +x ${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/wasm_singlethread/bin/qt-cmake 
          ${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/wasm_singlethread/bin/qt-cmake -G Ninja -DQT_HOST_PATH=${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/gcc_64/ -DCMAKE_BUILD_TYPE="release" ${{ inputs.cmakeArgs }} -DCMAKE_INSTALL_PREFIX="../install" ${{ github.workspace }}
      
      - name: Build
        working-directory: ${{ runner.temp }}/build
        run: cmake --build .   
      

      - uses: actions/checkout@v4
        if: startsWith(inputs.deploy_dev,'true')
        with:
          fetch-depth: 0
          path: 'developBranch'
          ref: 'develop'
      
      - name: Configure
        if: startsWith(inputs.deploy_dev,'true')
        working-directory: ${{ runner.temp }}/build
        run: |
          rm CMakeCache.txt
          chmod +x ${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/wasm_singlethread/bin/qt-cmake 
          ${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/wasm_singlethread/bin/qt-cmake -G Ninja -DQT_HOST_PATH=${{ github.workspace }}/../Qt/${{ inputs.qtVersion }}/gcc_64/ -DCMAKE_BUILD_TYPE="release"  ${{ inputs.cmakeArgs }} -DCMAKE_INSTALL_PREFIX="../install" ${{ github.workspace }}/developBranch
      
      - name: Build
        if: startsWith(inputs.deploy_dev,'true')
        working-directory: ${{ runner.temp }}/build
        run: |
          cmake --build .   
          mv ${{ github.workspace }}/developBranch/wasm ${{ github.workspace }}/wasm/develop
      
      - name: Package
        working-directory: ${{ github.workspace }}/wasm/
        run: |
          cmake -E make_directory ${{runner.temp}}/page-packages
          cmake -E tar c ${{runner.temp}}/page-packages/github-pages.tar -- .
      
      - uses: actions/upload-artifact@v4
        with:
          name: 'github-pages' 
          path:  ${{runner.temp}}/page-packages/*

