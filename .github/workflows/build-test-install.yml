name: push-build-release
on: 
  workflow_call:
    inputs:
      os:
        default: 'ubuntu-latest'
        type: string  
      artifactId:
        default: ''
        type: string  
      cmakeArgs:
        default: ''
        type: string
      qtModules:
        default: ''
        type: string 
      qtVersion:
        default: '6.6.0'
        type: string  
      test:
        default: true
        type: boolean
      qmllint:
        default: false
        type: boolean


jobs:
  build_test_package:
    runs-on: ${{ inputs.os }}
    continue-on-error: true  
    permissions:
      pull_requests: write

    steps:
          
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install dependencies on windows
        if: startsWith(inputs.os, 'windows')
        run: |
          choco install ninja cmake
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Install dependencies on ubuntu
        if: startsWith(inputs.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake doxygen
          
      - name: Install dependencies on macos
        if: startsWith(inputs.os, 'macos')
        run: |
          brew install cmake ninja

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: ${{ inputs.qtVersion }}
          modules: ${{ inputs.qtModules }}  
          tools: 'tools_ifw'

      - name: Create build directory
        run:  cmake -E make_directory ${{runner.temp}}/build

      - name: Configure
        working-directory: ${{ runner.temp }}/build
        run: qt-cmake -G Ninja -DCMAKE_BUILD_TYPE="release" -DCPACK_IFW_ROOT="${{ github.workspace }}/../Qt/Tools/QtInstallerFramework/4.7" -DBUILD_SHARED_LIBS=ON -DBUILD_TESTING=ON ${{ inputs.cmakeArgs }} -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}/install ${{ github.workspace }}
      
      - name: Qmllint
        if: ${{ (startsWith(inputs.os, 'ubuntu'))&&(inputs.qmllint)&&(startsWith(github.base_ref, 'develop')) }}
        continue-on-error: true
        working-directory: ${{ runner.temp }}/build
        run: |
          curl -L -X POST  -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
          -d '{"body":"Me too"}' || true
          cmake --build . -t all_qmllint_json || true
          comment=$(cat *_qmllint.json)
          echo $comment
          curl -L -X POST  -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
          -d '{"body": "'$comment'"}'
            
      - name: Build
        working-directory: ${{ runner.temp }}/build
        run: cmake --build .   


      - name: Test
        if: inputs.test
        working-directory: ${{ runner.temp }}/build
        run: ninja test

      - name: Install
        working-directory: ${{ runner.temp }}/build
        run: cmake --install .

      - name: Binary Package Macos
        if: startsWith(inputs.os, 'macos')
        working-directory: ${{ runner.temp }}/build 
        run: |
          cpack -V -B  package -G "IFW;TGZ" --config  CPackConfig.cmake

      - name: Binary Package Windows
        if: startsWith(inputs.os, 'windows')
        working-directory: ${{ runner.temp }}/build
        run: |
          cpack -V -B package -G "IFW;TGZ" --config CPackConfig.cmake
      
      - name: Binary Package Ubuntu
        if: startsWith(inputs.os, 'ubuntu')
        working-directory: ${{ runner.temp }}/build
        run: |
          cpack -V -B package -G "IFW;TGZ" --config CPackConfig.cmake


      - uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.os }}_${{ inputs.artifactId }} 
          path: ${{ runner.temp }}/build/package/* 
      

